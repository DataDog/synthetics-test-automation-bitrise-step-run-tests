#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  datadog-mobile-app-run-tests
summary: |
  placeholder summary
description: |
  placeholder description
website: https://github.com/placeholder-github-username/bitrise-step-datadog-mobile-app-run-tests
source_code_url: https://github.com/placeholder-github-username/bitrise-step-datadog-mobile-app-run-tests
support_url: https://github.com/placeholder-github-username/bitrise-step-datadog-mobile-app-run-tests/issues

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic
#   - flutter

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - test

# These properties define whether a Step is run in a given Workflow or not.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#setting-conditions-for-running-the-step
#
# is_always_run: false
# is_skippable: false
# run_if: ""

# Use the `deps` property to declare dependencies that you can fetch from an OS dependency manager.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#submodules-and-step-dependencies
#
# deps:
#   brew:
#   - name: cmake
#   apt_get:
#   - name: cmake


toolkit:
  bash:
    entry_file: ./src/scripts/run-test.sh


inputs:
  - example_step_input: Default Value - you can leave this empty if you want to
    opts:
      title: "Example Step Input"
      summary: Summary. No more than 2-3 sentences.
      description: |
        Description of this input.

        Can be Markdown formatted text.
      is_expand: true
      is_required: true
      value_options: []
  - api_key: $DATADOG_API_KEY
    opts:
      title: "Datadog API Key"
      description: The name of the environment variable containing the API key.
      is_expand: true
      is_required: true
  - app_key: $DATADOG_APP_KEY
    opts:
      title: "Datadog APP Key"
      description: The name of the environment variable containing the APP key.
      is_expand: true
      is_required: true
  - background: false
    opts:
      title: "Run in Background"
      description: Whether or not this step should run in the background.
  - config_path: ''
    opts:
      title: "Config Path"
      description: The global JSON configuration used when launching tests.
  - fail_on_critical_errors: false
    opts:
      title: "Fail on critical errors"
      description: Fail if tests were not triggered or results could not be fetched.
  - fail_on_missing_tests: false
    opts:
      title: "Fail on missing tests"
      description: Fail if at least one specified test with a public ID (using `public_ids` or listed in a test file) is missing in a run (for example, if it has been deleted programmatically or on the Datadog site).
  - fail_on_timeout: true
    opts:
      title: "Fail on Timeout"
      description: Force the CI to fail (or pass) if one of the results exceeds its test timeout.
  - files: ''
    opts:
      title: "Files"
      description: Glob pattern to detect Synthetic tests config files.
  - junit_report: ''
    opts:
      title: "Junit Report"
      description: The filename for a JUnit report if you want to generate one.
  - locations: ''
    opts:
      title: "Locations"
      description: String of locations separated by semicolons to override the locations where your tests run.
  - no_output_timeout: '30m'
    opts:
      title: "No Output Timeout"
      description: Elapsed time the command can run without output.
  - polling_timeout: 1800000
    opts:
      title: "Polling Timeout"
      description: The duration (in milliseconds) after which the action stops polling for test results.
  - public_ids: ''
    opts:
      title: "Public Ids"
      description: String of public IDs separated by commas for Synthetic tests you want to trigger.
  - site: 'datadoghq.com'
    opts:
      title: "Site"
      description: The Datadog site to send data to. If the `DD_SITE` environment variable is set, it takes preference.
  - subdomain: 'app'
    opts:
      title: "Subdomain"
      description: The name of the custom subdomain set to access your Datadog application.
  - test_search_query: ''
    opts:
      title: "Test Search Query"
      description: Trigger tests corresponding to a search query.
  - tunnel: false
    opts:
      title: "Tunnel"
      description: Use the testing tunnel to trigger tests.
  - variables: ''
    opts:
      title: "Variables"
      description: Key-value pairs for injecting variables into tests. Must be formatted using `KEY=VALUE`.

outputs:
  - EXAMPLE_STEP_OUTPUT:
    opts:
      title: "Example Step Output"
      summary: Summary. No more than 2-3 sentences.
      description: |
        Description of this output.

        Can be Markdown formatted text.
